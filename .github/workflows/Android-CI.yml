name: PullRequest

on: [pull_request]

jobs:
  buildTest:
    name: Build & Test JDK ${{ matrix.java_version }}
    runs-on: macOS-latest
    strategy:
      matrix:
        java_version: [1.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.7
      - name: Build project
        run: cd software && ./gradlew assembleDebug
        env:
          TAG_VERSION: ${{ github.ref }}
      - name: Run tests
        run: cd software && ./gradlew test
      #- name: Set project dir environment var
      #  run: echo ::set-env name=PROJECT_DIR::"$GITHUB_WORKSPACE/software" # working-directory: ./software doesn't work with uses:
      - name: Run instrumentation tests
        uses: malinskiy/action-android/emulator-run-cmd@release/0.0.7
        with:
          cmd: cd software && ./gradlew cAT
          api: 28
          tag: default
          abi: x86
      - name: Archive Espresso results
        uses: actions/upload-artifact@v2.1.4
        with:
          name: IOIO-Espresso-report
          path: software/applications/**/build/reports/androidTests/connected/
      - name: ls
        run: ls -la
      - name: search connected
        run: find . -name connected
      - name: Save logcat output
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: IOIO-logcat
          path: artifacts/logcat.log
      - name: Archive screenshots
        uses: actions/upload-artifact@v2.1.4
        with:
          name: IOIO-Screenshots
          path: software/applications/screenshots/adb/
      - name: search software
        run: ls software -la
      - name: search software/applications
        run: ls software/applications -la
      - name: search software/applications/screenshots
        run: ls software/applications/screenshots -la
      - name: search software/applications/screenshots/adb
        run: ls software/applications/screenshots/adb -la
  Check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0
      - name: Install JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.7
      - name: Code checks
        run: cd software && ./gradlew check
      - name: Archive Lint report
        uses: actions/upload-artifact@v2.0.1
        if: ${{ always() }}
        with:
          name: IOIO-Lint-report
          path: software/**/build/reports/lint-results.html
